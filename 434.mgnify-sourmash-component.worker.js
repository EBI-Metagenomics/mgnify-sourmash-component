(self.webpackChunkmgnify_sourmash_component=self.webpackChunkmgnify_sourmash_component||[]).push([[434],{7646:(e,n,t)=>{"use strict";t.r(n),t.d(n,{KmerMinHash:()=>h,__wbindgen_throw:()=>d});var r=t(5608);let o=new TextDecoder("utf-8",{ignoreBOM:!0,fatal:!0});o.decode();let s=null;function c(){return null!==s&&s.buffer===r.memory.buffer||(s=new Uint8Array(r.memory.buffer)),s}function u(e,n){return o.decode(c().subarray(e,e+n))}let a=0,i=new TextEncoder("utf-8");const f="function"==typeof i.encodeInto?function(e,n){return i.encodeInto(e,n)}:function(e,n){const t=i.encode(e);return n.set(t),{read:e.length,written:t.length}};let _=null;function l(){return null!==_&&_.buffer===r.memory.buffer||(_=new Int32Array(r.memory.buffer)),_}class h{static __wrap(e){const n=Object.create(h.prototype);return n.ptr=e,n}free(){const e=this.ptr;this.ptr=0,r.__wbg_kmerminhash_free(e)}constructor(e,n,t,o,s,c,u,a){var i=r.kmerminhash_new_with_scaled(e,n,t,o,s,c,u,a);return h.__wrap(i)}add_sequence_js(e){var n=function(e,n,t){if(void 0===t){const t=i.encode(e),r=n(t.length);return c().subarray(r,r+t.length).set(t),a=t.length,r}let r=e.length,o=n(r);const s=c();let u=0;for(;u<r;u++){const n=e.charCodeAt(u);if(n>127)break;s[o+u]=n}if(u!==r){0!==u&&(e=e.slice(u)),o=t(o,r,r=u+3*e.length);const n=c().subarray(o+u,o+r);u+=f(e,n).written}return a=u,o}(e,r.__wbindgen_malloc,r.__wbindgen_realloc),t=a;r.kmerminhash_add_sequence_js(this.ptr,n,t)}to_json(){try{r.kmerminhash_to_json(8,this.ptr);var e=l()[2],n=l()[3];return u(e,n)}finally{r.__wbindgen_free(e,n)}}}const d=function(e,n){throw new Error(u(e,n))}},5608:(e,n,t)=>{"use strict";var r=t.w[e.id];e.exports=r,t(7646),r[""]()}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,