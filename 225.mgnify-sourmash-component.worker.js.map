{"version":3,"file":"225.mgnify-sourmash-component.worker.js","mappings":"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","sources":["webpack://mgnify-sourmash-component/./node_modules/sourmash/sourmash.js","webpack://mgnify-sourmash-component/./node_modules/sourmash/sourmash_bg.js"],"sourcesContent":["import * as wasm from \"./sourmash_bg.wasm\";\nimport { __wbg_set_wasm } from \"./sourmash_bg.js\";\n__wbg_set_wasm(wasm);\nexport * from \"./sourmash_bg.js\";\n","let wasm;\nexport function __wbg_set_wasm(val) {\n    wasm = val;\n}\n\n\nconst heap = new Array(128).fill(undefined);\n\nheap.push(undefined, null, true, false);\n\nfunction getObject(idx) { return heap[idx]; }\n\nlet heap_next = heap.length;\n\nfunction dropObject(idx) {\n    if (idx < 132) return;\n    heap[idx] = heap_next;\n    heap_next = idx;\n}\n\nfunction takeObject(idx) {\n    const ret = getObject(idx);\n    dropObject(idx);\n    return ret;\n}\n\nfunction addHeapObject(obj) {\n    if (heap_next === heap.length) heap.push(heap.length + 1);\n    const idx = heap_next;\n    heap_next = heap[idx];\n\n    heap[idx] = obj;\n    return idx;\n}\n\nfunction debugString(val) {\n    // primitive types\n    const type = typeof val;\n    if (type == 'number' || type == 'boolean' || val == null) {\n        return  `${val}`;\n    }\n    if (type == 'string') {\n        return `\"${val}\"`;\n    }\n    if (type == 'symbol') {\n        const description = val.description;\n        if (description == null) {\n            return 'Symbol';\n        } else {\n            return `Symbol(${description})`;\n        }\n    }\n    if (type == 'function') {\n        const name = val.name;\n        if (typeof name == 'string' && name.length > 0) {\n            return `Function(${name})`;\n        } else {\n            return 'Function';\n        }\n    }\n    // objects\n    if (Array.isArray(val)) {\n        const length = val.length;\n        let debug = '[';\n        if (length > 0) {\n            debug += debugString(val[0]);\n        }\n        for(let i = 1; i < length; i++) {\n            debug += ', ' + debugString(val[i]);\n        }\n        debug += ']';\n        return debug;\n    }\n    // Test for built-in\n    const builtInMatches = /\\[object ([^\\]]+)\\]/.exec(toString.call(val));\n    let className;\n    if (builtInMatches.length > 1) {\n        className = builtInMatches[1];\n    } else {\n        // Failed to match the standard '[object ClassName]'\n        return toString.call(val);\n    }\n    if (className == 'Object') {\n        // we're a user defined class or Object\n        // JSON.stringify avoids problems with cycles, and is generally much\n        // easier than looping through ownProperties of `val`.\n        try {\n            return 'Object(' + JSON.stringify(val) + ')';\n        } catch (_) {\n            return 'Object';\n        }\n    }\n    // errors\n    if (val instanceof Error) {\n        return `${val.name}: ${val.message}\\n${val.stack}`;\n    }\n    // TODO we could test for more things here, like `Set`s and `Map`s.\n    return className;\n}\n\nlet WASM_VECTOR_LEN = 0;\n\nlet cachedUint8Memory0 = null;\n\nfunction getUint8Memory0() {\n    if (cachedUint8Memory0 === null || cachedUint8Memory0.byteLength === 0) {\n        cachedUint8Memory0 = new Uint8Array(wasm.memory.buffer);\n    }\n    return cachedUint8Memory0;\n}\n\nconst lTextEncoder = typeof TextEncoder === 'undefined' ? (0, module.require)('util').TextEncoder : TextEncoder;\n\nlet cachedTextEncoder = new lTextEncoder('utf-8');\n\nconst encodeString = (typeof cachedTextEncoder.encodeInto === 'function'\n    ? function (arg, view) {\n    return cachedTextEncoder.encodeInto(arg, view);\n}\n    : function (arg, view) {\n    const buf = cachedTextEncoder.encode(arg);\n    view.set(buf);\n    return {\n        read: arg.length,\n        written: buf.length\n    };\n});\n\nfunction passStringToWasm0(arg, malloc, realloc) {\n\n    if (realloc === undefined) {\n        const buf = cachedTextEncoder.encode(arg);\n        const ptr = malloc(buf.length, 1) >>> 0;\n        getUint8Memory0().subarray(ptr, ptr + buf.length).set(buf);\n        WASM_VECTOR_LEN = buf.length;\n        return ptr;\n    }\n\n    let len = arg.length;\n    let ptr = malloc(len, 1) >>> 0;\n\n    const mem = getUint8Memory0();\n\n    let offset = 0;\n\n    for (; offset < len; offset++) {\n        const code = arg.charCodeAt(offset);\n        if (code > 0x7F) break;\n        mem[ptr + offset] = code;\n    }\n\n    if (offset !== len) {\n        if (offset !== 0) {\n            arg = arg.slice(offset);\n        }\n        ptr = realloc(ptr, len, len = offset + arg.length * 3, 1) >>> 0;\n        const view = getUint8Memory0().subarray(ptr + offset, ptr + len);\n        const ret = encodeString(arg, view);\n\n        offset += ret.written;\n        ptr = realloc(ptr, len, offset, 1) >>> 0;\n    }\n\n    WASM_VECTOR_LEN = offset;\n    return ptr;\n}\n\nlet cachedInt32Memory0 = null;\n\nfunction getInt32Memory0() {\n    if (cachedInt32Memory0 === null || cachedInt32Memory0.byteLength === 0) {\n        cachedInt32Memory0 = new Int32Array(wasm.memory.buffer);\n    }\n    return cachedInt32Memory0;\n}\n\nconst lTextDecoder = typeof TextDecoder === 'undefined' ? (0, module.require)('util').TextDecoder : TextDecoder;\n\nlet cachedTextDecoder = new lTextDecoder('utf-8', { ignoreBOM: true, fatal: true });\n\ncachedTextDecoder.decode();\n\nfunction getStringFromWasm0(ptr, len) {\n    ptr = ptr >>> 0;\n    return cachedTextDecoder.decode(getUint8Memory0().subarray(ptr, ptr + len));\n}\n\nfunction _assertClass(instance, klass) {\n    if (!(instance instanceof klass)) {\n        throw new Error(`expected instance of ${klass.name}`);\n    }\n    return instance.ptr;\n}\n\nfunction isLikeNone(x) {\n    return x === undefined || x === null;\n}\n\nlet cachedUint32Memory0 = null;\n\nfunction getUint32Memory0() {\n    if (cachedUint32Memory0 === null || cachedUint32Memory0.byteLength === 0) {\n        cachedUint32Memory0 = new Uint32Array(wasm.memory.buffer);\n    }\n    return cachedUint32Memory0;\n}\n\nfunction passArray32ToWasm0(arg, malloc) {\n    const ptr = malloc(arg.length * 4, 4) >>> 0;\n    getUint32Memory0().set(arg, ptr / 4);\n    WASM_VECTOR_LEN = arg.length;\n    return ptr;\n}\n\nfunction handleError(f, args) {\n    try {\n        return f.apply(this, args);\n    } catch (e) {\n        wasm.__wbindgen_exn_store(addHeapObject(e));\n    }\n}\n\nconst ComputeParametersFinalization = (typeof FinalizationRegistry === 'undefined')\n    ? { register: () => {}, unregister: () => {} }\n    : new FinalizationRegistry(ptr => wasm.__wbg_computeparameters_free(ptr >>> 0));\n/**\n*/\nexport class ComputeParameters {\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n        ComputeParametersFinalization.unregister(this);\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_computeparameters_free(ptr);\n    }\n    /**\n    */\n    constructor() {\n        const ret = wasm.computeparameters_new_with_params();\n        this.__wbg_ptr = ret >>> 0;\n        return this;\n    }\n    /**\n    * @param {Uint32Array} ksizes\n    */\n    set_ksizes(ksizes) {\n        const ptr0 = passArray32ToWasm0(ksizes, wasm.__wbindgen_malloc);\n        const len0 = WASM_VECTOR_LEN;\n        wasm.computeparameters_set_ksizes(this.__wbg_ptr, ptr0, len0);\n    }\n    /**\n    * @param {number} scaled\n    */\n    set_scaled(scaled) {\n        wasm.computeparameters_set_scaled(this.__wbg_ptr, scaled);\n    }\n    /**\n    * @param {number} num\n    */\n    set_num(num) {\n        wasm.computeparameters_set_num(this.__wbg_ptr, num);\n    }\n    /**\n    * @param {boolean} is_protein\n    */\n    set_protein(is_protein) {\n        wasm.computeparameters_set_protein(this.__wbg_ptr, is_protein);\n    }\n    /**\n    * @param {boolean} dayhoff\n    */\n    set_dayhoff(dayhoff) {\n        wasm.computeparameters_set_dayhoff(this.__wbg_ptr, dayhoff);\n    }\n    /**\n    * @param {boolean} hp\n    */\n    set_hp(hp) {\n        wasm.computeparameters_set_hp(this.__wbg_ptr, hp);\n    }\n    /**\n    * @param {boolean} track\n    */\n    set_track_abundance(track) {\n        wasm.computeparameters_set_track_abundance(this.__wbg_ptr, track);\n    }\n    /**\n    * @param {number} seed\n    */\n    set_seed(seed) {\n        wasm.computeparameters_set_seed(this.__wbg_ptr, seed);\n    }\n}\n\nconst KmerMinHashFinalization = (typeof FinalizationRegistry === 'undefined')\n    ? { register: () => {}, unregister: () => {} }\n    : new FinalizationRegistry(ptr => wasm.__wbg_kmerminhash_free(ptr >>> 0));\n/**\n*/\nexport class KmerMinHash {\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n        KmerMinHashFinalization.unregister(this);\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_kmerminhash_free(ptr);\n    }\n    /**\n    * @param {number} num\n    * @param {number} ksize\n    * @param {boolean} is_protein\n    * @param {boolean} dayhoff\n    * @param {boolean} hp\n    * @param {number} seed\n    * @param {number} scaled\n    * @param {boolean} track_abundance\n    */\n    constructor(num, ksize, is_protein, dayhoff, hp, seed, scaled, track_abundance) {\n        const ret = wasm.kmerminhash_new_with_scaled(num, ksize, is_protein, dayhoff, hp, seed, scaled, track_abundance);\n        this.__wbg_ptr = ret >>> 0;\n        return this;\n    }\n    /**\n    * @param {string} buf\n    */\n    add_sequence_js(buf) {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            const ptr0 = passStringToWasm0(buf, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n            const len0 = WASM_VECTOR_LEN;\n            wasm.kmerminhash_add_sequence_js(retptr, this.__wbg_ptr, ptr0, len0);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            if (r1) {\n                throw takeObject(r0);\n            }\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * @returns {string}\n    */\n    to_json() {\n        let deferred2_0;\n        let deferred2_1;\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.kmerminhash_to_json(retptr, this.__wbg_ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            var r2 = getInt32Memory0()[retptr / 4 + 2];\n            var r3 = getInt32Memory0()[retptr / 4 + 3];\n            var ptr1 = r0;\n            var len1 = r1;\n            if (r3) {\n                ptr1 = 0; len1 = 0;\n                throw takeObject(r2);\n            }\n            deferred2_0 = ptr1;\n            deferred2_1 = len1;\n            return getStringFromWasm0(ptr1, len1);\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n            wasm.__wbindgen_free(deferred2_0, deferred2_1, 1);\n        }\n    }\n}\n\nconst SignatureFinalization = (typeof FinalizationRegistry === 'undefined')\n    ? { register: () => {}, unregister: () => {} }\n    : new FinalizationRegistry(ptr => wasm.__wbg_signature_free(ptr >>> 0));\n/**\n*/\nexport class Signature {\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n        SignatureFinalization.unregister(this);\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_signature_free(ptr);\n    }\n    /**\n    * @param {ComputeParameters} params\n    */\n    constructor(params) {\n        _assertClass(params, ComputeParameters);\n        const ret = wasm.signature_new_from_params(params.__wbg_ptr);\n        this.__wbg_ptr = ret >>> 0;\n        return this;\n    }\n    /**\n    * @param {string} buf\n    */\n    add_sequence_js(buf) {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            const ptr0 = passStringToWasm0(buf, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n            const len0 = WASM_VECTOR_LEN;\n            wasm.signature_add_sequence_js(retptr, this.__wbg_ptr, ptr0, len0);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            if (r1) {\n                throw takeObject(r0);\n            }\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * @param {File} fp\n    * @param {Function | undefined} [callback]\n    */\n    add_from_file(fp, callback) {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.signature_add_from_file(retptr, this.__wbg_ptr, addHeapObject(fp), isLikeNone(callback) ? 0 : addHeapObject(callback));\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            if (r1) {\n                throw takeObject(r0);\n            }\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * @returns {string}\n    */\n    to_json() {\n        let deferred2_0;\n        let deferred2_1;\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.signature_to_json(retptr, this.__wbg_ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            var r2 = getInt32Memory0()[retptr / 4 + 2];\n            var r3 = getInt32Memory0()[retptr / 4 + 3];\n            var ptr1 = r0;\n            var len1 = r1;\n            if (r3) {\n                ptr1 = 0; len1 = 0;\n                throw takeObject(r2);\n            }\n            deferred2_0 = ptr1;\n            deferred2_1 = len1;\n            return getStringFromWasm0(ptr1, len1);\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n            wasm.__wbindgen_free(deferred2_0, deferred2_1, 1);\n        }\n    }\n    /**\n    * @returns {number}\n    */\n    size() {\n        const ret = wasm.signature_size(this.__wbg_ptr);\n        return ret >>> 0;\n    }\n}\n\nexport function __wbindgen_object_drop_ref(arg0) {\n    takeObject(arg0);\n};\n\nexport function __wbindgen_number_new(arg0) {\n    const ret = arg0;\n    return addHeapObject(ret);\n};\n\nexport function __wbg_new_0737b8c81a08773b() { return handleError(function () {\n    const ret = new FileReaderSync();\n    return addHeapObject(ret);\n}, arguments) };\n\nexport function __wbg_readAsArrayBuffer_b476c29c497a135e() { return handleError(function (arg0, arg1) {\n    const ret = getObject(arg0).readAsArrayBuffer(getObject(arg1));\n    return addHeapObject(ret);\n}, arguments) };\n\nexport function __wbg_size_9c7e57fbd4f0f4b5(arg0) {\n    const ret = getObject(arg0).size;\n    return ret;\n};\n\nexport function __wbg_slice_0da9ca5b030b84a7() { return handleError(function (arg0, arg1, arg2) {\n    const ret = getObject(arg0).slice(arg1, arg2);\n    return addHeapObject(ret);\n}, arguments) };\n\nexport function __wbg_newwithlength_66ae46612e7f0234(arg0) {\n    const ret = new Array(arg0 >>> 0);\n    return addHeapObject(ret);\n};\n\nexport function __wbg_set_d4638f722068f043(arg0, arg1, arg2) {\n    getObject(arg0)[arg1 >>> 0] = takeObject(arg2);\n};\n\nexport function __wbg_new_28c511d9baebfa89(arg0, arg1) {\n    const ret = new Error(getStringFromWasm0(arg0, arg1));\n    return addHeapObject(ret);\n};\n\nexport function __wbg_apply_6d0b9cd50eb480c3() { return handleError(function (arg0, arg1, arg2) {\n    const ret = getObject(arg0).apply(getObject(arg1), getObject(arg2));\n    return addHeapObject(ret);\n}, arguments) };\n\nexport function __wbg_buffer_12d079cc21e14bdb(arg0) {\n    const ret = getObject(arg0).buffer;\n    return addHeapObject(ret);\n};\n\nexport function __wbg_new_63b92bc8671ed464(arg0) {\n    const ret = new Uint8Array(getObject(arg0));\n    return addHeapObject(ret);\n};\n\nexport function __wbg_set_a47bac70306a19a7(arg0, arg1, arg2) {\n    getObject(arg0).set(getObject(arg1), arg2 >>> 0);\n};\n\nexport function __wbg_length_c20a40f15020d68a(arg0) {\n    const ret = getObject(arg0).length;\n    return ret;\n};\n\nexport function __wbg_byteLength_58f7b4fab1919d44(arg0) {\n    const ret = getObject(arg0).byteLength;\n    return ret;\n};\n\nexport function __wbindgen_debug_string(arg0, arg1) {\n    const ret = debugString(getObject(arg1));\n    const ptr1 = passStringToWasm0(ret, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    const len1 = WASM_VECTOR_LEN;\n    getInt32Memory0()[arg0 / 4 + 1] = len1;\n    getInt32Memory0()[arg0 / 4 + 0] = ptr1;\n};\n\nexport function __wbindgen_throw(arg0, arg1) {\n    throw new Error(getStringFromWasm0(arg0, arg1));\n};\n\nexport function __wbindgen_memory() {\n    const ret = wasm.memory;\n    return addHeapObject(ret);\n};\n\n"],"names":["wasm","__wbg_set_wasm","val","heap","Array","fill","undefined","getObject","idx","push","heap_next","length","takeObject","ret","dropObject","addHeapObject","obj","debugString","type","description","name","isArray","debug","i","builtInMatches","exec","toString","call","className","JSON","stringify","_","Error","message","stack","WASM_VECTOR_LEN","cachedUint8Memory0","getUint8Memory0","byteLength","Uint8Array","memory","buffer","cachedTextEncoder","TextEncoder","module","require","encodeString","encodeInto","arg","view","buf","encode","set","read","written","passStringToWasm0","malloc","realloc","ptr","subarray","len","mem","offset","code","charCodeAt","slice","cachedInt32Memory0","getInt32Memory0","Int32Array","cachedTextDecoder","TextDecoder","ignoreBOM","fatal","getStringFromWasm0","decode","cachedUint32Memory0","handleError","f","args","apply","this","e","__wbindgen_exn_store","ComputeParametersFinalization","FinalizationRegistry","register","unregister","__wbg_computeparameters_free","ComputeParameters","__destroy_into_raw","__wbg_ptr","free","constructor","computeparameters_new_with_params","set_ksizes","ksizes","ptr0","Uint32Array","passArray32ToWasm0","__wbindgen_malloc","len0","computeparameters_set_ksizes","set_scaled","scaled","computeparameters_set_scaled","set_num","num","computeparameters_set_num","set_protein","is_protein","computeparameters_set_protein","set_dayhoff","dayhoff","computeparameters_set_dayhoff","set_hp","hp","computeparameters_set_hp","set_track_abundance","track","computeparameters_set_track_abundance","set_seed","seed","computeparameters_set_seed","KmerMinHashFinalization","__wbg_kmerminhash_free","KmerMinHash","ksize","track_abundance","kmerminhash_new_with_scaled","add_sequence_js","retptr","__wbindgen_add_to_stack_pointer","__wbindgen_realloc","kmerminhash_add_sequence_js","r0","to_json","deferred2_0","deferred2_1","kmerminhash_to_json","r1","r2","r3","ptr1","len1","__wbindgen_free","SignatureFinalization","__wbg_signature_free","Signature","params","instance","klass","_assertClass","signature_new_from_params","signature_add_sequence_js","add_from_file","fp","callback","signature_add_from_file","x","signature_to_json","size","signature_size","__wbindgen_object_drop_ref","arg0","__wbindgen_number_new","__wbg_new_0737b8c81a08773b","FileReaderSync","arguments","__wbg_readAsArrayBuffer_b476c29c497a135e","arg1","readAsArrayBuffer","__wbg_size_9c7e57fbd4f0f4b5","__wbg_slice_0da9ca5b030b84a7","arg2","__wbg_newwithlength_66ae46612e7f0234","__wbg_set_d4638f722068f043","__wbg_new_28c511d9baebfa89","__wbg_apply_6d0b9cd50eb480c3","__wbg_buffer_12d079cc21e14bdb","__wbg_new_63b92bc8671ed464","__wbg_set_a47bac70306a19a7","__wbg_length_c20a40f15020d68a","__wbg_byteLength_58f7b4fab1919d44","__wbindgen_debug_string","__wbindgen_throw","__wbindgen_memory"],"sourceRoot":""}